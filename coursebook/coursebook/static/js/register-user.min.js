addEventListener('DOMContentLoaded', () => {
	const form = document.querySelector('.jsSendForm')
	const userName = document.querySelector('#username')
	const userSurname = document.querySelector('#users-surname')
	const userEmail = document.querySelector('#userEmail')
	const userPassword = document.querySelector('#userPassword')
	const userRegisterBtn = document.querySelector('.userRegisterBtn')
	const phoneNumber = document.querySelector('#JSphoneNumber')
	const registerCompanyBtn = document.querySelector('.jsCompanyAdd')
	const loginUsers = document.querySelector('.jsloginUsers')
	const jsloginUsersBtn = document.querySelector('.jsloginUsersBtn')


	let error = 0

	const showError = (input, msg) => {
		const formBox = input.parentElement
		const errorMsg = formBox.querySelector('.form__group-paragraph--error')

		formBox.classList.add('error')
		errorMsg.textContent = msg
		error++
	}

	const checkLength = (input, min) => {
		if (input.value.length < min) {
			showError(input, `Podano za mało znaków`)
		}
	}

	const clearError = (input) => {
		const formBox = input.parentElement
		formBox.classList.remove('error')
	}

	const checkEmail = (email) => {
		const regularExpression =
			/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9żźćńółęąśŻŹĆĄŚĘŁÓŃ]+\.)+[a-zA-ZżźćńółęąśŻŹĆĄŚĘŁÓŃ]{2,}))$/

		if (regularExpression.test(email.value)) {
			clearError(email)
		} else {
			showError(email, 'Niepoprawny adres e-mail')
		}
	}

	const checkNameForms = (input) => {
		const regularExpression = /^[A-Za-z]{2,20}$/

		if (regularExpression.test(input.value)) {
			clearError(input)
		} else {
			showError(input, 'Niepoprawne imie')
		}
	}

	const checkSurNameForms = (input) => {
		const regularExpression = /^[A-Za-z]{2,20}$/

		if (regularExpression.test(input.value)) {
			clearError(input)
		} else {
			showError(input, 'Niepoprawne nazwisko')
		}
	}

	const checkPasswords = (input1) => {
		const regularExpression = /^.{5,}$/;

		if (input1.value === '') {
			const errorText = input1.placeholder
			showError(input1, `${errorText} musi zostać wypełnione`)
		} else {
			if (regularExpression.test(input1.value)) {
				clearError(input1)
			} else {
				showError(input1, 'Hasło musi składać się z minimum 5 znaków')
			}
		}
	}

	const checkForm = (input) => {
		input.forEach((item) => {
			if (item.value === '') {
				showError(item, item.placeholder)
			} else {
				clearError(item)
			}
		})
	}

	const checkForm2 = (item) => {
		if (item.value === '') {
			showError(item, item.placeholder)
		} else {
			clearError(item)
		}
	}
	if (userRegisterBtn) {
		userRegisterBtn.addEventListener('click', (e) => {
			e.preventDefault()
			error = 0
			checkForm([userName, userSurname, userEmail])
			checkNameForms(userName)
			checkSurNameForms(userSurname)
			checkLength(userName, 2)
			checkLength(userSurname, 2)
			checkEmail(userEmail)
			checkPasswords(userPassword)

			if (error == 0) {
				const formData = new FormData(form)
				const csrfToken = formData.get('csrfmiddlewaretoken')
				fetch('register-customer', {
					method: 'POST',
					headers: {
						'X-CSRFToken': csrfToken,
					},
					body: formData,
				}).then((response) => {
					if (response.ok) {
						createAlert('Konto zostało utworzone. Zaloguj się.')
						setTimeout(() => {
							window.location.href = '/login'
						}, 1000)
					}
				})
			}
		})
	}

	const phoneNumberValidate = (phoneNumber) => {
		const regularExpression =
		/(?<!\w)(\(?(\+|00)?48\)?)?[ -]?\d{3}[ -]?\d{3}[ -]?\d{3}(?!\w)/
			// /^(?:(?:(?:(?:\+|00)\d{2})?[ -]?(?:(?:\(0?\d{2}\))|(?:0?\d{2})))?[ -]?(?:\d{3}[- ]?\d{2}[- ]?\d{2}|\d{2}[- ]?\d{2}[- ]?\d{3}|\d{7})|(?:(?:(?:\+|00)\d{2})?[ -]?\d{3}[ -]?\d{3}[ -]?\d{3}))$/

		if (regularExpression.test(phoneNumber.value)) {
			clearError(phoneNumber)
		} else {
			showError(phoneNumber, `${phoneNumber.placeholder} jest niepoprawny`)
		}
	}

	if (registerCompanyBtn) {
		registerCompanyBtn.addEventListener('click', (e) => {
			e.preventDefault()
			error = 0
			checkForm([userName, userEmail])
			checkNameForms(userName)
			checkLength(userName, 2)
			checkEmail(userEmail)
			checkPasswords(userPassword)
			phoneNumberValidate(phoneNumber)

			if (error == 0) {
				const formData = new FormData(form)
				const csrfToken = formData.get('csrfmiddlewaretoken')
				fetch('register-company', {
					method: 'POST',
					headers: {
						'X-CSRFToken': csrfToken,
					},
					body: formData,
				}).then((response) => {
					if (response.ok) {
						createAlert('Konto zostało utworzone. Zaloguj się.')
						setTimeout(() => {
							window.location.href = '/login'
						}, 1000)
					}
				})
			}
		})
	}

	//button login user
	if (jsloginUsersBtn) {
		jsloginUsersBtn.addEventListener('click', (e) => {
			e.preventDefault()
			error = 0
			checkEmail(userEmail)
			checkPasswords(userPassword)

			if (error == 0) {
				const formData = new FormData(loginUsers)
				const csrfToken = formData.get('csrfmiddlewaretoken')
				fetch('login', {
					method: 'POST',
					headers: {
						'X-CSRFToken': csrfToken,
					},
					body: formData,
				}).then((response) => {
					if (response.ok) {
						// createAlert('Udało się zalogować')
						setTimeout(() => {
							window.location.href = '/account'
						}, 200)
					}
				})
			}
		})
	}

	const checkUsernameContent = () => {
		checkForm2(userName)
		checkNameForms(userName)
		checkLength(userName, 2)
	}

	if (userName) {
		userName.addEventListener('keyup', checkUsernameContent)
	}

	const checkUserSurnameContent = () => {
		checkForm2(userSurname)
		checkSurNameForms(userSurname)
		checkLength(userSurname, 2)
	}

	if (userSurname) {
		userSurname.addEventListener('keyup', checkUserSurnameContent)
	}

	const checkUserEmailContent = () => {
		checkForm2(userEmail)
		checkEmail(userEmail)
	}

	if (userEmail) {
		userEmail.addEventListener('keyup', checkUserEmailContent)
	}

	const checkUserPassword= () => {
		checkPasswords(userPassword)
	}

	if (userPassword) {
		userPassword.addEventListener('keyup', checkUserPassword)
	}

	const checkUserPhone = () => {
		phoneNumberValidate(phoneNumber)
	}

	if (phoneNumber) {
		phoneNumber.addEventListener('keyup', checkUserPhone)
	}

	const createAlert = (message) => {
		const body = document.querySelector('body')
		const alert = document.createElement('div')
		alert.classList.add('alert', 'alert--success')
		alert.innerHTML = `
		<svg
		xmlns="http://www.w3.org/2000/svg"
		width="24"
		height="24"
		viewBox="0 0 24 24"
		fill="none"
		stroke="#47d762"
		stroke-width="2"
		stroke-linecap="round"
		stroke-linejoin="round"
		class="feather feather-check-circle"
	  >
		<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
		<polyline points="22 4 12 14.01 9 11.01"></polyline>
	  </svg>
	  ${message}
		`

		body.appendChild(alert)
	}
})
